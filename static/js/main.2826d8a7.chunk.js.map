{"version":3,"sources":["TodoList.js","App.js","index.js"],"names":["ToDoList","tasks","deleteTask","completeTask","console","log","className","map","task","onClick","id","icon","App","library","add","fab","far","fas","useState","completed","setTasks","taskName","setTaskName","addTask","newTask","length","newTasks","action","onSubmit","e","preventDefault","handleSubmit","htmlFor","type","placeholder","onChange","target","value","filter","document","querySelectorAll","classList","getElementsByClassName","ReactDOM","render","StrictMode","getElementById"],"mappings":"oOA2BeA,EAzBE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAGrC,OAFAC,QAAQC,IAAIJ,GAGV,qBAAKK,UAAU,gBAAf,SACGL,EAAMM,KAAI,SAACC,GAAD,OACT,sBAAKF,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,sBAAb,SAAoCE,EAAKA,SAE3C,sBAAKF,UAAU,aAAf,UACE,mBAAGA,UAAU,6BACb,wBAAQA,UAAU,iBAAiBG,QAAS,kBAAMN,EAAaK,EAAKE,KAApE,SACE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,aAEjC,wBAAQL,UAAU,eAAeG,QAAS,kBAAMP,EAAWM,EAAKE,KAAhE,SACE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,kBAVVH,EAAKE,U,+BC4DzBE,MA3Df,WACEC,IAAQC,IAAIC,IAAKC,IAAKC,KACtB,IACA,EAA0BC,mBAAS,CACjC,CAAEV,KAAM,aAAcW,WAAW,EAAOT,GAAI,GAC5C,CAAEF,KAAM,SAAUW,WAAW,EAAOT,GAAI,KAF1C,mBAAOT,EAAP,KAAcmB,EAAd,KAIA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAoBMC,EAAU,SAACf,GACf,IAAMgB,EAAU,CACdhB,KAAMA,EACNW,WAAW,EACXT,GAAIT,EAAMwB,OAAS,GAEjBC,EAAQ,sBAAOzB,GAAP,CAAcuB,IAC1BpB,QAAQC,IAAIqB,GACZN,EAASM,IAMX,OACE,qBAAKpB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,YAAd,SA1CK,WA2CL,uBAAMA,UAAU,WAAWqB,OAAO,GAAGC,SAAU,SAACC,GAAD,OAzBhC,SAACrB,EAAMqB,GAC1BA,EAAEC,iBACGtB,IACLe,EAAQf,GACRc,EAAY,KAqB8CS,CAAaV,EAAUQ,IAA7E,UACE,uBAAOG,QAAQ,WAAW1B,UAAU,gBAApC,+BAGA,uBAAO2B,KAAK,OAAO3B,UAAU,WAAW4B,YAAY,uBAAuBC,SAjC9D,SAACN,GACpBP,EAAYO,EAAEO,OAAOC,UAiCf,wBAAQ/B,UAAU,aAAlB,4BAEF,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAUL,MAAOA,EAAOC,WAhBb,SAACQ,GAClB,IAAMgB,EAAWzB,EAAMqC,QAAO,SAAC9B,GAAD,OAAUA,EAAKE,KAAOA,KACpDU,EAASM,IAc6CH,QAASA,EAASpB,aA5CrD,SAACO,GACpBT,EAAMS,EAAK,GAAGS,WAAY,EAC1BoB,SAASC,iBAAiB,SAAS9B,EAAK,GAAG+B,UAAU3B,IAAI,kBACzDV,QAAQC,IAAIJ,EAAOsC,SAASG,uBAAuB,4BAA4BhC,EAAK,IACpFU,EAASnB,cCjBb0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,W","file":"static/js/main.2826d8a7.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ToDoList = ({ tasks, deleteTask, completeTask }) => {\n  console.log(tasks);\n\n  return (\n    <div className=\"todoContainer\">\n      {tasks.map((task) => (\n        <div className=\"todo\" key={task.id}>\n          <div className=\"taskDescription\">\n            <p className=\"taskDescriptionText\">{task.task}</p>\n          </div>\n          <div className=\"taskHandle\">\n            <p className=\"taskDescriptionCompleted\"></p>\n            <button className=\"completeButton\" onClick={() => completeTask(task.id)}>\n              <FontAwesomeIcon icon={[\"fas\", \"check\"]} />\n            </button>\n            <button className=\"deleteButton\" onClick={() => deleteTask(task.id)}>\n              <FontAwesomeIcon icon={[\"fas\", \"times\"]} />\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import \"./App.css\";\nimport ToDoList from \"./TodoList\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\n// import ToDo from \"./Todo\";\n\nfunction App() {\n  library.add(fab, far, fas);\n  const title = `Doable`;\n  const [tasks, setTasks] = useState([\n    { task: \"Scrub Sink\", completed: false, id: 1 },\n    { task: \"Dishes\", completed: false, id: 2 },\n  ]);\n  const [taskName, setTaskName] = useState(\"\");\n\n  const completeTask = (id) => {\n    tasks[id - 1].completed = true;\n    document.querySelectorAll(\".todo\")[id - 1].classList.add(\"todo-completed\");\n    console.log(tasks, document.getElementsByClassName(\"taskDescriptionCompleted\")[id - 1]);\n    setTasks(tasks);\n  };\n\n  const handleChange = (e) => {\n    setTaskName(e.target.value);\n  };\n\n  const handleSubmit = (task, e) => {\n    e.preventDefault();\n    if (!task) return;\n    addTask(task);\n    setTaskName(\"\");\n  };\n\n  const addTask = (task) => {\n    const newTask = {\n      task: task,\n      completed: false,\n      id: tasks.length + 1,\n    };\n    let newTasks = [...tasks, newTask];\n    console.log(newTasks);\n    setTasks(newTasks);\n  };\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <h1 className=\"app-title\">{title}</h1>\n        <form className=\"toDoForm\" action=\"\" onSubmit={(e) => handleSubmit(taskName, e)}>\n          <label htmlFor=\"makeToDo\" className=\"makeToDoLabel\">\n            Whatcha gotta do?\n          </label>\n          <input type=\"text\" className=\"makeToDo\" placeholder=\"Name your task here.\" onChange={handleChange} />\n          <button className=\"createToDo\">Create Task</button>\n        </form>\n        <div className=\"task-container\">\n          <ToDoList tasks={tasks} deleteTask={deleteTask} addTask={addTask} completeTask={completeTask} />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}